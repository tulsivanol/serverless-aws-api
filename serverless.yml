# NOTE: update this with your service name
service: notes-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

resources:
  - ${file(resources/api-gateway-errors.yml)}

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: ap-south-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    TABLE_NAME: ${env:TABLE_NAME}
    STRIPE_SECRET_KEY: ${env.STRIPE_SECRET_KEY}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dyanmodb:Scan
        - dyanmodb:Query
        - dyanmodb:GetItem
        - dyanmodb:PutItem
        - dyanmodb:UpdateItem
        - dyanmodb:DeleteItem
        - dyanmodb:DescribeItem
      Resource: "arn:aws:dynamodb:ap-south-1:694640931613:table/notes"

functions:
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      - http:
          path: notes/{id}
          method: get
          authorizer: aws_iam
  list:
    handler: list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam
  update:
    handler: update.main
    events:
      - http:
          path: notes/{id}
          method: put
          authorizer: aws_iam

  delete:
    handler: delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam

  billing:
    handler: billing.main
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizer: aws_iam
